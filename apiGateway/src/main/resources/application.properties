spring.application.name=apiGateway
spring.main.allow-bean-definition-overriding=true
spring.cloud.gateway.discovery.locator.enabled=true

server.port=8080

eureka.instance.instance-id=${spring.application.name}:${random.uuid}

#deshabilita la estrategia predeterminada de balanceo de carga de netflix ribbon
spring.cloud.loadbalancer.ribbon.enable=false

spring.cloud.gateway.routes[0].id=courseService
spring.cloud.gateway.routes[0].uri=lb://COURSESERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/courses/**

spring.cloud.gateway.routes[1].id=userService
spring.cloud.gateway.routes[1].uri=lb://USERSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/**

spring.cloud.gateway.routes[2].id=requestService
spring.cloud.gateway.routes[2].uri=lb://REQUESTSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/request/**

spring.cloud.gateway.default-filters=TokenRelay

app.config.keycloak.url = http://localhost:9090/auth
app.config.keycloak.realm = onlineCourse-realms

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/auth/realms/ms-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/auth/realms/ms-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-api-gateway
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=FlmusBL50ARui4tLTcUCqfxdT62OO7nb
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-api-gateway
#spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhot:8080/login/oauth2/code/spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.scope= openid